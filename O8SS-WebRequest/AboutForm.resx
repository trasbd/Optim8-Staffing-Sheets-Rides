<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>